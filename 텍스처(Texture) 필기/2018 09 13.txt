디스크립터힙에 배열처럼 쓰는 영역을 디스크립터 테이블이라고 한다.

ppt 39

OffsetIndescriptorsFromTableStart - 디스크립터 테이블(배열)의 시작 위치

만약, 물을 그린다고 가정하자.

그럼 물을 표현하는 사각형을 그리고, 그 사각형에 물모양의 텍스처를 매핑한다.
그런데, 물처럼 보이지만, 물이 흐르지 않는다.
물이 흐르게 보이게 할라면, 사각형을 움직이게 할 수 도 있지만, 텍스처를 바꿔가며
그릴 수 도 있다. 
=> 텍스쳐의 uv좌표를 조금씩 옆으로 옮기면서 그려주는 것을 반복하면, 물이 흐르는
것처럼 보인다. (텍스쳐 이미지를 평행이동 하는 원리) -> 텍스쳐 애니메이션 효과
(u, v) * M(행렬) = (u', v')
=> 물이 x축으로만 움직이게 하는 것이니, u좌표만 바뀜 (u', v)

(x, y, z, 1) * M = (X, Y, Z)
(x, y, 1) * M = (X, Y, 1)

=> M의 행렬 =	? ? ? ?
		? ? ? ?
		a b ? ?
		0 0 0 1
맨 처음 uv 좌표(0, 0)을 (1, 2)에서 읽기 위해서는 ADDRESS_MODE를 WRAP을 사용하면
반복됨

cbuffer cbTextureMatrix : register(b2)
{
	matrix gmtxTexture : packoffset(c0); // ★★텍스쳐 좌표를 바꾸기 위한 행렬
}

★Texture2D gTreeTexture[4] 와 Texture2DArray gTreeTexture 차이점

- Texture2DArray : 이 자체가 배열이다.
따라서 변수뒤에 [ ]를 사용할 필요가 없음
사용하게 되면, 배열의 배열이 됨.
대신 이것은 몇 개의 텍스처가 있는지 알 수 없음 그리고 각 텍스처의 크기랑 형식이 모두 똑같아야 된다.
또한 배열의 인덱스에 변수를 사용할 수 있다. 이것을 사용하려면 텍스처들의 배열로 만들어야 된다.

- gTreeTexture[4] : 텍스쳐가 4개인 배열, 텍스쳐 배열을 사용하면, 텍스쳐가 각각 크기가 달라도 상관이 없다.
배열의 인덱스는 변수로 사용할 수 없고, 상수로만 사용가능
만약 인덱스를 변수로 사용하려면, NonUniformResouceIndex 매크로를 사용해서 변수를 쓰면 된다.
단점은 ★서술자(리소스 뷰)를 텍스처 개수 만큼 만들어야 한다.






